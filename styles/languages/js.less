@import '../colors.less';

.source.js{
	.jsdelimiter(){
		color: @mono-3;
		font-weight: bold;
	}
	.keyword{
		.jsdelimiter();
		&.control{
			color: @hue-2;
			font-weight: normal;
		}
		&.operator{
			&.logical, &.comparison, &.assignment{
				.jsdelimiter();
			}
			&.in, &.typeof{
				color: @hue-2;
				font-weight: normal;
			}
			&.new{
				color: @hue-5-2;
				font-weight: normal;
			}
		}
	}

	.type{
		&.arrow{
			.jsdelimiter();
		}
		&.name{
			color: @mono-1;
		}
	}
	.delimiter{
		&.method, &.property{
			color: @hue-5-2;
			font-weight: bolder;
		}
	}
	.terminator.statement{
		.jsdelimiter();
	}

	.class.js{
		background-color: lighten(@hue-1, 60%);
		.class{
			color: @hue-1;
		}
		.name{
			color: @hue-1;
			font-weight: bold;
		}
		.instance{
			color: @mono-1;
			font-weight: normal;
		}
	}
	.class{
		color: @hue-5-2;
	}
	.type.var, .modifier{
		color: @hue-5-2;
	}

	.comment, .jsdoc{
		color: @hue-6;
	}
	.constant{
		color: @mono-1;
		&.numeric{
			color: @hue-4;
			font-weight: bold;
		}
	}
	.variable{
		&.other{
			color: @mono-1;
		}
		&.language{
			color: @hue-5-2;
		}
		&.parameter{
			color: @mono-2;
			font-weight: bold;
		}
	}
	.console.object{
		color: @hue-3;
		font-weight: bold;
	}
	.function{
		color: @mono-1;
		.type.function{
			color: @hue-2;
		}
		.name{
			color: @hue-1;
		}
		&.constructor{
			color: @hue-1;
			font-weight: bold;
		}
	}


	.method{
		.variable.parameter{
			color: @hue-1;
		}
		.function{
			color: @hue-1;
			font-weight: bold;
		}
	}

	.string{
		color: @hue-4;
	}

	.embedded.source{
		color: @hue-4-2;
		.section{
			color: @hue-4-2;
			font-weight: bold;
		}
	}
}
